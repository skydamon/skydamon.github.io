<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>跳跃表 on 胡刘郏的技术博客</title>
    <link>https://www.huliujia.com/tags/%E8%B7%B3%E8%B7%83%E8%A1%A8/</link>
    <description>Recent content in 跳跃表 on 胡刘郏的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 28 Mar 2021 22:35:46 +0800</lastBuildDate>
    
	<atom:link href="https://www.huliujia.com/tags/%E8%B7%B3%E8%B7%83%E8%A1%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LevelDB源码解析(2) SkipList(跳跃表)</title>
      <link>https://www.huliujia.com/blog/bcd8d4d2415144bf21c2e3fc695cf55510653264/</link>
      <pubDate>Sun, 28 Mar 2021 22:35:46 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/bcd8d4d2415144bf21c2e3fc695cf55510653264/</guid>
      <description>背景 SkipList是LevelDB的MemTable使用的底层存储结构，LevelDB实现了一个支持泛型的跳跃表。本文不会具体介绍跳跃表的数据结构，如果读者不了解跳跃表的原理、实现，可以先看一下跳跃表（Skiplist）从原理到实现 SkipList的对外</description>
    </item>
    
    <item>
      <title>跳跃表（SkipList）从原理到实现</title>
      <link>https://www.huliujia.com/blog/071730c4c3f23dbd8c6eaf0e524873206fcf56d3/</link>
      <pubDate>Sat, 27 Mar 2021 21:14:23 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/071730c4c3f23dbd8c6eaf0e524873206fcf56d3/</guid>
      <description>数组与链表 数组和链表是非常基础的两种数据结构，链表每次查找都需要从头结点开始线性遍历，时间复杂度是O(n)。而数组通过维护元素顺序可以使用二分查找，查找的时间复杂度是O(lg(n))。查找效率方面数组完胜链表。 但是由于数组插入或删除元素时必须要移动所有受影</description>
    </item>
    
  </channel>
</rss>