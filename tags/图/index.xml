<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>图 on 胡刘郏的技术博客</title>
    <link>https://www.huliujia.com/tags/%E5%9B%BE/</link>
    <description>Recent content in 图 on 胡刘郏的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 19 Jan 2019 19:40:08 +0800</lastBuildDate>
    
	<atom:link href="https://www.huliujia.com/tags/%E5%9B%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>点对点最短路径算法：Floyd Warshall算法</title>
      <link>https://www.huliujia.com/blog/82ee513b870106e5e7b3cff44579e3ee266b2e3e/</link>
      <pubDate>Sat, 19 Jan 2019 19:40:08 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/82ee513b870106e5e7b3cff44579e3ee266b2e3e/</guid>
      <description>背景知识 图简介 图由节点和边组成，边有方向的图称为有向图，边没有方向的图称为无向图，最短路径算法里可以把无向图视为双向连接的有向图。 边有权重的图称为有权图，边没有权重的图称为无权图，无权图可以视为边的权重均为1的图。 点对点最短路径 求图中任意（所有）两点之间的</description>
    </item>
    
    <item>
      <title>最小生成树(MST)：Prim算法与Kruskal算法</title>
      <link>https://www.huliujia.com/blog/dab47d7b495f721c94db0959b69585abd0016a49/</link>
      <pubDate>Thu, 29 Mar 2018 19:19:49 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/dab47d7b495f721c94db0959b69585abd0016a49/</guid>
      <description>什么是最小生成树 最小生成树是一副连通加权无向图中一棵权值最小的生成树[维基百科] 常见的应用例子有铺设道路连接所有城市、铺设管道等，目标都是使总长度最短。 求解最小生成树的基本原理 Prim算法和Kruskal算法是求解最小生成树的两种经典算法，这两个算法都是贪</description>
    </item>
    
    <item>
      <title>单源点最短路径算法：Dijkstra算法</title>
      <link>https://www.huliujia.com/blog/e7ccfcbb1aefac5e938085dd930ff6fed9bc2a2d/</link>
      <pubDate>Fri, 19 Jan 2018 11:36:24 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/e7ccfcbb1aefac5e938085dd930ff6fed9bc2a2d/</guid>
      <description>背景知识 图简介 图由节点和边组成，边有方向的图称为有向图，边没有方向的图称为无向图，最短路径算法里可以把无向图视为双向连接的有向图。 边有权重的图称为有权图，边没有权重的图称为无权图，无权图可以视为边的权重均为1的图。 单源点最短路径 给定图中的一个节点，求该节点</description>
    </item>
    
    <item>
      <title>单源点最短路径算法：Bellman Ford算法</title>
      <link>https://www.huliujia.com/blog/635c265b38c9b4fa17e79d33fa6b24a84544513f/</link>
      <pubDate>Fri, 19 Jan 2018 11:26:32 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/635c265b38c9b4fa17e79d33fa6b24a84544513f/</guid>
      <description>背景知识 图简介 图由节点和边组成，边有方向的图称为有向图，边没有方向的图称为无向图，最短路径算法里可以把无向图视为双向连接的有向图。 边有权重的图称为有权图，边没有权重的图称为无权图，无权图可以视为边的权重均为1的图。 单源点最短路径 给定图中的一个节点，求该节点</description>
    </item>
    
  </channel>
</rss>