<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SST on 胡刘郏的技术博客</title>
    <link>https://www.huliujia.com/tags/sst/</link>
    <description>Recent content in SST on 胡刘郏的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 26 Oct 2021 09:23:59 +0800</lastBuildDate>
    
	<atom:link href="https://www.huliujia.com/tags/sst/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LevelDB源码解析(13) BackgroundCompaction SST文件合并</title>
      <link>https://www.huliujia.com/blog/4496bd928e/</link>
      <pubDate>Tue, 26 Oct 2021 09:23:59 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/4496bd928e/</guid>
      <description>背景 LevelDB的名字中的Level表示文件是分层存储的，默认最多7层，每层有0到N个文件。除了L0层，每层内部的文件之间都是有序的(所谓Sorted String Table)，互斥的(相互之间的key范围没有重叠)。而L0层的文件都是从Memtable直接落盘的，</description>
    </item>
    
    <item>
      <title>LevelDB源码解析(11) SST文件结构</title>
      <link>https://www.huliujia.com/blog/6974db6de9/</link>
      <pubDate>Tue, 05 Oct 2021 16:53:44 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/6974db6de9/</guid>
      <description>背景 前面我们逐渐深入的介绍了LevelDB从插入key-value到落盘的整个过程，感兴趣的读者可以移步相关文章： LevelDB源码解析(4) MemTable LevelDB源码解析(5) WriteBatch LevelDB源码解析(6) 写任务(WriterBatch)合并 LevelDB源码</description>
    </item>
    
    <item>
      <title>LevelDB源码解析(10) TableBuilder（Memtable序列化）</title>
      <link>https://www.huliujia.com/blog/02ad8ac30a/</link>
      <pubDate>Tue, 05 Oct 2021 10:33:18 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/02ad8ac30a/</guid>
      <description>背景 在LevelDB源码解析(4) MemTable中我们介绍了Memtable，LevelDB会先把key-value插入到MemTable中。如果MemTable写满了，就会新建一个MemTable进行写入。旧的Memtable(也叫Immutable M</description>
    </item>
    
    <item>
      <title>LevelDB源码解析(9) FilterBlockBuilder</title>
      <link>https://www.huliujia.com/blog/1a8dbd0991/</link>
      <pubDate>Mon, 04 Oct 2021 21:52:31 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/1a8dbd0991/</guid>
      <description>背景 Filter block为SST中一个区块，filter block由多个filter组成，每个data block对应一个filter（但是一个filter可能对应多个data block）。LevelDB在进入data block中查找前会先检查filter，如果fi</description>
    </item>
    
    <item>
      <title>LevelDB源码解析(8) BlockBuilder</title>
      <link>https://www.huliujia.com/blog/6a7ee0401f/</link>
      <pubDate>Mon, 04 Oct 2021 10:45:17 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/6a7ee0401f/</guid>
      <description>背景 一个SST文件由5个区块组成，其中三个区块都是由BlockBuilder构建的，所以在讲SST文件的构建之前，先讲一下BlockBuilder。BlockBuilder接受一组key-value，将其序列化到buffer中，buffer的数据就是要写入</description>
    </item>
    
  </channel>
</rss>