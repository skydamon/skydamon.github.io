<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>锁 on 胡刘郏的技术博客</title>
    <link>https://www.huliujia.com/tags/%E9%94%81/</link>
    <description>Recent content in 锁 on 胡刘郏的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Jun 2018 11:23:37 +0800</lastBuildDate>
    
	<atom:link href="https://www.huliujia.com/tags/%E9%94%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux内核学习笔记（十一）内核同步方法（自旋锁，信号量，互斥锁，完成变量，顺序锁，禁止抢占）</title>
      <link>https://www.huliujia.com/blog/148dbabde2804f33fc69c42699a84637082c5d78/</link>
      <pubDate>Sat, 09 Jun 2018 11:23:37 +0800</pubDate>
      
      <guid>https://www.huliujia.com/blog/148dbabde2804f33fc69c42699a84637082c5d78/</guid>
      <description>原子操作 Linux内核提供了多种同步机制，这些机制本质上都是通过原子操作来实现的。原子操作可以保证指令以原子方式执行，不会被中途打断（中断也不会打断一个指令，处理器只有在当前指令完成后才会去处理中断）。内核提供了两套原子操作的接口，一套用于整数原子操作，一</description>
    </item>
    
  </channel>
</rss>